import org.flywaydb.gradle.task.FlywayMigrateTask

buildscript {
    ext.kotlin_version = '1.3.60' // Required for Kotlin integration
    ext.spring_boot_version = '2.1.0.RELEASE'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" // Required for Kotlin integration
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

plugins{
    id "org.flywaydb.flyway" version "6.0.8"
    id "com.moowork.node" version "1.3.1"
}

apply plugin: 'kotlin' // Required for Kotlin integration
apply plugin: "kotlin-spring" // https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.moowork.node"

version = '0.0.10-RC'
processResources {
    filesMatching('application.properties') {
        expand projectVersion: project.version
    }
}


repositories {
    jcenter()
}
def testDbUrl = "jdbc:mysql://localhost:3306/timesheet?user=root&useSSL=false&useTimezone=true&serverTimezone=UTC&useLegacyDatetimeCode=false&zeroDateTimeBehavior=convertToNull"

bootRun.environment([
        "SPRING_DATASOURCE_URL": testDbUrl,
        "MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE": "*",
        "MANAGEMENT_ENDPOINT_HEALTH_SHOWDETAILS": "always"
])

bootRun.environment([
        "SPRING_DATASOURCE_URL": testDbUrl,
        "MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE": "*",
        "MANAGEMENT_ENDPOINT_HEALTH_SHOWDETAILS": "always"
])


dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version" // Required for Kotlin integration
    compile "org.springframework.boot:spring-boot-starter-web"
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    runtimeOnly 'mysql:mysql-connector-java'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
}

flyway {
    url = testDbUrl
}